# Generated by Django 5.2.2 on 2025-08-03 15:25

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models

def migrate_products(apps, schema_editor):
    Food = apps.get_model('area', 'Food')
    Merch = apps.get_model('area', 'Merch')
    FoodCategory = apps.get_model('area', 'FoodCategory')
    MerchCategory = apps.get_model('area', 'MerchCategory')
    FoodIngredient = apps.get_model('area', 'FoodIngredient')
    Product = apps.get_model('area', 'Product')
    ProductCategory = apps.get_model('area', 'ProductsCategory')
    ProductIngredient = apps.get_model('area', 'ProductIngredient')

    category_map = {}
    for cat in FoodCategory.objects.all():
        new_cat = ProductCategory.objects.update_or_create(
            name=cat.name,
            picture=cat.picture,
            description=cat.description
        )
        category_map[f'food_{cat.id}'] = new_cat

    for cat in MerchCategory.objects.all():
        new_cat = ProductCategory.objects.update_or_create(
            name=cat.name,
            picture=cat.picture,
            description=cat.description
        )
        category_map[f'merch_{cat.id}'] = new_cat

    ingredient_map = {}
    for ing in FoodIngredient.objects.all():
        new_ing = ProductIngredient.objects.create(
            name=ing.name,
            picture=ing.picture,
            description=ing.description
        )
        ingredient_map[ing.id] = new_ing

    for f in Food.objects.all():
        Product.objects.create(
            uuid=f.uuid,
            name=f.name,
            anime=f.anime,
            product_category=category_map.get(f'food_{f.category_id}') if f.category_id else None,
            price=f.price,
            picture=f.picture,
            description=f.description,
            product_ingredient=ingredient_map.get(f.food_ingredient_id),
            size=None,
        )

    for m in Merch.objects.all():
        Product.objects.create(
            uuid=m.uuid,
            name=m.name,
            anime=m.anime,
            product_category=category_map.get(f'merch_{m.merch_category_id}'),
            price=m.price,
            picture=m.picture,
            description=m.description,
            product_ingredient=None,
            size=m.size,
        )

class Migration(migrations.Migration):

    dependencies = [
        ('area', '0007_order_is_draft'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('picture', models.ImageField(upload_to='', verbose_name='Picture')),
                ('description', models.TextField(blank=True, max_length=300, verbose_name='Description')),
            ],
        ),
        migrations.CreateModel(
            name='ProductIngredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('picture', models.ImageField(upload_to='', verbose_name='Picture')),
                ('description', models.TextField(blank=True, max_length=300, verbose_name='Description')),
            ],
        ),
        migrations.RemoveField(
            model_name='order',
            name='comment',
        ),
        migrations.AddField(
            model_name='order',
            name='order_note',
            field=models.TextField(blank=True, max_length=200, verbose_name='Order Note'),
        ),
        migrations.AlterField(
            model_name='merch',
            name='anime',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='animess', to='area.anime', verbose_name='Anime'),
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('picture', models.ImageField(upload_to='', verbose_name='Picture')),
                ('description', models.TextField(blank=True, max_length=300, verbose_name='Description')),
                ('price', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Price')),
                ('size', models.CharField(blank=True, max_length=50, null=True, verbose_name='Size')),
                ('anime', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='animes', to='area.anime', verbose_name='Anime')),
                ('product_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='area.productcategory', verbose_name='Product Category')),
                ('product_ingredient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ingredients', to='area.productingredient', verbose_name='Product Ingredient')),
            ],
        ),
    ]
